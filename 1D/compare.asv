solve_ODEs;
stoptime = t_ode.*Dip_freq;
length_t = size(t_ode,1);

fp = zeros(length_t,2*order +1);
fp_index = zeros(length_t,2*order +1);

phi_evo = phi_1;

fphi = fourier_transform(phi_evo,Nx);
[fp(1,:),fp_index(1,:)] = find_peak(fphi.*conj(fphi),order,k_spacing,Nx);





for i = 2:length_t
Deltat = (stoptime(i)-stoptime(i-1))/100;    
phi_evo = dynamic(phi_evo,stoptime(i)-stoptime(i-1),Deltat,Beta,Nx,V,k_scale,f);

fphi = fourier_transform(phi_evo,Nx);


[fp(i,:),fp_index(i,:)] = find_peak(fphi.*conj(fphi),order,k_spacing,Nx);
end
s = sum(fp,2);

fp = fp/
pop = cv.*conj(cv);




%plot(stoptime,pop(:,order+1),stoptime,f_square(:,order+1))

